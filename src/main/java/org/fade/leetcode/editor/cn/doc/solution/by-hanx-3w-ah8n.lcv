* 

```
class Solution {
public:
lengthOfLongestSubstring(string s) {
        vector<int> m (128,0);//初始化128个0的数组，因为现在所有能显示的和不能显示的字符只有128种。
        int ans = 0;//答案长度
        int i = 0;//窗口的左边界
        for(int j = 0; j<s.size(); ++j)//从头开始遍历字符串
        {
            i = max(i, m[s[j]]);//解释一下m[s[j]],s[j]就是对应的那个字符，做为数组的索引的时候会自动转成字符对应的整形ascii编码的数值
            m[s[j]] = j+1;//字符对应的位置存储的是当前字符的下一个位置，方便当窗口右边界发现了重复字符的时候直接更新窗口的左边界i的值，也就是上边的那行代码。
            ans = max(ans, j - i + 1);这里就是判断当前字串长度和之前的字串长度，谁大留下谁。
        }
        return ans;   返回结果
    }
};
```

