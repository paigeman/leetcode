/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {
        // 法一 双指针
//        ListNode p = list1, q = list2,
//                dump = new ListNode(), r = dump;
//        while (p != null && q != null) {
//            if (p.val < q.val) {
//                r.next = p;
//                p = p.next;
//            } else {
//                r.next = q;
//                q = q.next;
//            }
//            r = r.next;
//        }
//        if (p != null) {
//            r.next = p;
//        }
//        if (q != null) {
//            r.next = q;
//        }
//        return dump.next;
        // 法二 递归
        if (list1 != null && list2 == null) {
            return list1;
        } else if (list1 == null && list2 != null) {
            return list2;
        } else if (list1 == null && list2 == null) {
            return null;
        } else {
            if (list1.val < list2.val) {
                list1.next = mergeTwoLists(list1.next, list2);
                return list1;
            } else {
                list2.next = mergeTwoLists(list1, list2.next);
                return list2;
            }
        }
    }

}

//runtime:0 ms
//memory:41.5 MB
